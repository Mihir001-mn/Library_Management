managed implementation in class zbp_i_user_info_1234 unique;
//strict ( 2 );
with draft;

define behavior for ZI_USER_INFO_1234 alias UserData
persistent table zrap_user_info
draft table zrap_dr_info
lock master total etag lastchangedat
authorization master ( instance )
etag master Locallastchangedat
{
  create;
  update;
  delete;
field (readonly)UserId;
 association _BookIssued {create;with draft;}

  mapping  for  zrap_user_info {

   UserId = user_id;
    UserName = user_name;
    Email = email;
     Password = Password;
     UserType =  user_type;
     UserAddress = user_address ;
    BookLimit =  book_limit;
     UserStatus =  user_status;
   CreatedAt = created_at;

        LastChangedBy = last_changed_by;

        LastChangedAt = last_changed_at;

        LocalLastChangedAt = local_last_changed_at;




  }
}

define behavior for ZI_Student_book_1234  alias BookIssued
persistent table zuser_book
draft table ZISBOOK12345
lock dependent by _student
authorization dependent by _student
etag master Locallastchangedat
{

update;
  delete;

association _student{ with draft; }

field (numbering : managed , readonly)Issueid;
field (readonly)UserId;

determination updateExReturnDate on save {
field IssueDate;
}
 mapping  for  zuser_book {


 Issueid = issueid;
  Bookid = bookid;
 Modelid =  modelid;
 UserId= user_id;
  IssueDate = issue_date;
  ExReturnDate = ex_return_date ;
 AcReturnDate = ac_return_date  ;
  IsReturned = is_returned   ;

 Fine = fine;
 FineStatus = fine_status;
  Currency =  currency;
CreatedAt = created_at;

        LastChangedBy = last_changed_by;

        LastChangedAt = last_changed_at;

        LocalLastChangedAt = local_last_changed_at;






  }






}